name: Go Assets

on:
  push:
    branches:
      - go_assets 
  pull_request:

jobs:
  manylinux2014:
    runs-on: ${{ matrix.runner }}
    container: ${{ matrix.container }}
    strategy:
      matrix:
        name: [ubuntu-latest, ubuntu-arm-latest]
        include:
          - name: ubuntu-latest
            os: ubuntu-latest
            release-os: manylinux2014
            release-arch: x86_64
            container: quay.io/pypa/manylinux2014_x86_64
            runner: [ubuntu-latest]
          - name: ubuntu-arm-latest
            os: ubuntu-latest
            release-os: manylinux2014
            release-arch: aarch64
            container: quay.io/pypa/manylinux2014_aarch64
            runner: [self-hosted, linux, ARM64]
    steps:
      - uses: actions/checkout@v3
      - name: Install stable rust
        run: curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
      - name: Install uniffi-bindgen-go
        run: |
          source "$HOME/.cargo/env"
          cargo install uniffi-bindgen-go --git https://github.com/NordSecurity/uniffi-bindgen-go --tag v0.2.0+v0.25.0
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.x'
      - name: Build 
        run: |
          source "$HOME/.cargo/env"
          ./build_go_linux.sh
      - name: Tar assets
        run: tar -czvf iroh-go.tar.gz ./iroh-go/iroh
      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: iroh-go-${{ matrix.release-os }}-${{ matrix.release-arch }}
          path: iroh-go.tar.gz

  osx:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        name: [macOS-latest, macOS-arm-latest]
        include:
          - name: macOS-latest
            python: 3.11
            os: macOS-latest
            release-os: darwin
            release-arch: x86_64
            runner: [macOS-latest]
          - name: macOS-arm-latest
            python: 3.11
            os: macOS-latest
            release-os: darwin
            release-arch: aarch64
            runner: [self-hosted, macOS, ARM64]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Setup Go (self-hosted)
        if: startsWith(runner.name, 'hetz-')
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.x'
        env:
          HOME: /Users/hetzner
      - name: Setup Go (gh)
        if: startsWith(runner.name, 'hetz-') != true
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.x'
      - name: Install uniffi-bindgen-go & Build iroh ffi
        run: |
          cargo install uniffi-bindgen-go --git https://github.com/NordSecurity/uniffi-bindgen-go --tag v0.2.0+v0.25.0
          set -eu

          MODE=""
          DIR_NAME="debug"
          if [ "$#" -eq 1 ]; then
            if [[ $1 == "release" ]]; then
              MODE="--release"
              DIR_NAME="release"
            elif [[ $1 != "debug" ]]; then
              echo "Unknown mode '$1'. Options are 'release' and 'debug'. Defaults to 'debug'"
              exit
            fi
          fi

          # the path to the new folder we are including
          GO_DIR="./iroh-go"
          INCLUDE_PATH="${GO_DIR}/iroh/ffi"
          IROH_GO_PATH="${GO_DIR}/iroh/*"
          UDL_PATH="./src/iroh.udl"
          IROH_GO_FILE="${GO_DIR}/iroh/iroh.go"

          rm -rf $IROH_GO_PATH

          # build iroh-ffi and save the assets to ./go/iroh/include
          cargo build $MODE 

          # TODO why does this needs to exist twice? once in the path and the other in
          # the "deps" directory?
          # move needed files over
          mkdir ${INCLUDE_PATH}
          cp "target/${DIR_NAME}/libiroh.dylib" "${INCLUDE_PATH}/libiroh.dylib"
          mkdir "${INCLUDE_PATH}/deps"
          cp "${INCLUDE_PATH}/libiroh.dylib" "${INCLUDE_PATH}/deps/libiroh.dylib"

          uniffi-bindgen-go $UDL_PATH --out-dir $GO_DIR

          sed -i '' "s/\/\/ #include <iroh.h>/\/\*\n#cgo CFLAGS: -I.\/ffi\n#cgo LDFLAGS: -liroh -L.\/ffi\n#include <iroh.h>\n\*\//" $IROH_GO_FILE
      - name: Tar assets
        run: tar -czvf iroh-go.tar.gz ./iroh-go/iroh
      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: iroh-go-${{ matrix.release-os }}-${{ matrix.release-arch }}
          path: iroh-go.tar.gz
     
  # windows:
    # runs-on: windows-latest
    # steps:
     #  - uses: actions/checkout@v3
     #  - uses: dtolnay/rust-toolchain@stable
     #  - uses: actions/setup-python@v4
     #    with:
     #      python-version: '3.11'
     #  - name: Install maturin & uniffi-bindgen
     #    run: |
     #      pip install maturin uniffi-bindgen
     #  - name: Build wheel
     #    run: |
     #      maturin build --release
     #  - name: Upload wheel
     #    uses: actions/upload-artifact@v3
     #    with:
     #      name: wheels-windows-x86_64
     #      path: target/wheels/*.whl

