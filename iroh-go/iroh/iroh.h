

// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!



#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
	// We also try to prevent mixing versions of shared uniffi header structs.
	// If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V6
	#ifndef UNIFFI_SHARED_HEADER_V6
		#error Combining helper code from multiple versions of uniffi is not supported
	#endif // ndef UNIFFI_SHARED_HEADER_V6
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V6
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V6 in this file.           ⚠️

typedef struct RustBuffer {
	int32_t capacity;
	int32_t len;
	uint8_t *data;
} RustBuffer;

typedef int32_t (*ForeignCallback)(uint64_t, int32_t, uint8_t *, int32_t, RustBuffer *);

// Task defined in Rust that Go executes
typedef void (*RustTaskCallback)(const void *, int8_t);

// Callback to execute Rust tasks using a Go routine
//
// Args:
//   executor: ForeignExecutor lowered into a uint64_t value
//   delay: Delay in MS
//   task: RustTaskCallback to call
//   task_data: data to pass the task callback
typedef int8_t (*ForeignExecutorCallback)(uint64_t, uint32_t, RustTaskCallback, void *);

typedef struct ForeignBytes {
	int32_t len;
	const uint8_t *data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
	int8_t code;
	RustBuffer errorBuf;
} RustCallStatus;

// Continuation callback for UniFFI Futures
typedef void (*RustFutureContinuation)(void * , int8_t);

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V6 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H

// Needed because we can't execute the callback directly from go.
void cgo_rust_task_callback_bridge_iroh(RustTaskCallback, const void *, int8_t);

int8_t uniffiForeignExecutorCallbackiroh(uint64_t, uint32_t, RustTaskCallback, void*);

void uniffiFutureContinuationCallbackiroh(void*, int8_t);

void uniffi_iroh_fn_free_addprogress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_addprogress_as_abort(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_addprogress_as_all_done(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_addprogress_as_done(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_addprogress_as_found(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_addprogress_as_progress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_addprogress_type(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_authorid(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_authorid_from_string(
	RustBuffer str,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_authorid_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_authorid_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_blobdownloadrequest(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_blobdownloadrequest_new(
	void* hash,
	RustBuffer format,
	void* node,
	void* tag,
	void* out,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_connectiontype(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_connectiontype_as_direct(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_connectiontype_as_mixed(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_connectiontype_as_relay(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_connectiontype_type(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_directaddrinfo(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_directaddrinfo_addr(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_directaddrinfo_last_control(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_directaddrinfo_last_payload(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_directaddrinfo_latency(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_doc(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_doc_close(
	void* ptr,
	RustCallStatus* out_status
);

uint64_t uniffi_iroh_fn_method_doc_del(
	void* ptr,
	void* author_id,
	RustBuffer prefix,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_doc_export_file(
	void* ptr,
	void* entry,
	RustBuffer path,
	RustBuffer cb,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_doc_get_download_policy(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_doc_get_exact(
	void* ptr,
	void* author,
	RustBuffer key,
	int8_t include_empty,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_doc_get_many(
	void* ptr,
	void* query,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_doc_get_one(
	void* ptr,
	void* query,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_doc_id(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_doc_import_file(
	void* ptr,
	void* author,
	RustBuffer key,
	RustBuffer path,
	int8_t in_place,
	RustBuffer cb,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_doc_leave(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_doc_set_bytes(
	void* ptr,
	void* author,
	RustBuffer key,
	RustBuffer value,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_doc_set_download_policy(
	void* ptr,
	void* policy,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_doc_set_hash(
	void* ptr,
	void* author,
	RustBuffer key,
	void* hash,
	uint64_t size,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_doc_share(
	void* ptr,
	RustBuffer mode,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_doc_start_sync(
	void* ptr,
	RustBuffer peers,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_doc_status(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_doc_subscribe(
	void* ptr,
	uint64_t cb,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_docexportprogress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docexportprogress_as_abort(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docexportprogress_as_found(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docexportprogress_as_progress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docexportprogress_type(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_docimportprogress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docimportprogress_as_abort(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docimportprogress_as_all_done(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docimportprogress_as_found(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docimportprogress_as_ingest_done(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docimportprogress_as_progress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docimportprogress_type(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_docticket(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_docticket_from_string(
	RustBuffer content,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_docticket_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_docticket_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_downloadlocation(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_downloadlocation_external(
	RustBuffer path,
	int8_t in_place,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_downloadlocation_internal(
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_downloadpolicy(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_downloadpolicy_everything(
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_downloadpolicy_everything_except(
	RustBuffer filters,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_downloadpolicy_nothing(
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_downloadpolicy_nothing_except(
	RustBuffer filters,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_downloadprogress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_as_abort(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_as_done(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_as_export(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_as_export_progress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_as_found(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_as_found_hash_seq(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_as_network_done(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_as_progress(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_downloadprogress_type(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_entry(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_entry_author(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_entry_content_bytes(
	void* ptr,
	void* doc,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_entry_content_hash(
	void* ptr,
	RustCallStatus* out_status
);

uint64_t uniffi_iroh_fn_method_entry_content_len(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_entry_key(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_entry_namespace(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_filterkind(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_filterkind_exact(
	RustBuffer key,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_filterkind_prefix(
	RustBuffer prefix,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_filterkind_matches(
	void* ptr,
	RustBuffer key,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_hash(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_hash_from_bytes(
	RustBuffer bytes,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_hash_from_string(
	RustBuffer s,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_hash_new(
	RustBuffer buf,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_hash_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_hash_to_bytes(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_hash_to_hex(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_hash_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_ipv4addr(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_ipv4addr_from_string(
	RustBuffer str,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_ipv4addr_new(
	uint8_t a,
	uint8_t b,
	uint8_t c,
	uint8_t d,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_ipv4addr_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_ipv4addr_octets(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_ipv4addr_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_ipv6addr(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_ipv6addr_from_string(
	RustBuffer str,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_ipv6addr_new(
	uint16_t a,
	uint16_t b,
	uint16_t c,
	uint16_t d,
	uint16_t e,
	uint16_t f,
	uint16_t g,
	uint16_t h,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_ipv6addr_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_ipv6addr_segments(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_ipv6addr_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_irohnode(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_irohnode_new(
	RustBuffer path,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_irohnode_author_create(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_author_list(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_blobs_add_bytes(
	void* ptr,
	RustBuffer bytes,
	void* tag,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_irohnode_blobs_add_from_path(
	void* ptr,
	RustBuffer path,
	int8_t in_place,
	void* tag,
	void* wrap,
	uint64_t cb,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_irohnode_blobs_delete_blob(
	void* ptr,
	void* hash,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_irohnode_blobs_download(
	void* ptr,
	void* req,
	uint64_t cb,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_blobs_list(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_blobs_list_collections(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_blobs_list_incomplete(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_blobs_read_to_bytes(
	void* ptr,
	void* hash,
	RustCallStatus* out_status
);

uint64_t uniffi_iroh_fn_method_irohnode_blobs_size(
	void* ptr,
	void* hash,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_irohnode_blobs_write_to_path(
	void* ptr,
	void* hash,
	RustBuffer path,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_connection_info(
	void* ptr,
	void* node_id,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_connections(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_irohnode_doc_create(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_irohnode_doc_drop(
	void* ptr,
	void* doc_id,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_irohnode_doc_join(
	void* ptr,
	void* ticket,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_doc_list(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_doc_open(
	void* ptr,
	void* id,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_node_id(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_stats(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_irohnode_status(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_method_irohnode_tags_delete(
	void* ptr,
	void* name,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_irohnode_tags_list(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_liveevent(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_liveevent_as_content_ready(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_liveevent_as_insert_local(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_liveevent_as_insert_remote(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_liveevent_as_neighbor_down(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_liveevent_as_neighbor_up(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_liveevent_as_sync_finished(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_liveevent_type(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_namespaceid(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_namespaceid_from_string(
	RustBuffer str,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_namespaceid_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_namespaceid_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_nodeaddr(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_nodeaddr_new(
	void* node_id,
	RustBuffer derp_url,
	RustBuffer addresses,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_nodeaddr_derp_url(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_nodeaddr_direct_addresses(
	void* ptr,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_nodeaddr_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_nodestatusresponse(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_nodestatusresponse_listen_addrs(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_nodestatusresponse_node_addr(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_nodestatusresponse_version(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_publickey(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_publickey_from_bytes(
	RustBuffer bytes,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_publickey_from_string(
	RustBuffer s,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_publickey_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_publickey_fmt_short(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_publickey_to_bytes(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_publickey_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_query(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_query_all(
	RustBuffer opts,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_query_author(
	void* author,
	RustBuffer opts,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_query_author_key_exact(
	void* author,
	RustBuffer key,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_query_author_key_prefix(
	void* author,
	RustBuffer prefix,
	RustBuffer opts,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_query_key_exact(
	RustBuffer key,
	RustBuffer opts,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_query_key_prefix(
	RustBuffer prefix,
	RustBuffer opts,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_query_single_latest_per_key(
	RustBuffer opts,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_query_limit(
	void* ptr,
	RustCallStatus* out_status
);

uint64_t uniffi_iroh_fn_method_query_offset(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_rangespec(
	void* ptr,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_rangespec_is_all(
	void* ptr,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_rangespec_is_empty(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_settagoption(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_settagoption_auto(
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_settagoption_named(
	void* tag,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_socketaddr(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_socketaddr_from_ipv4(
	void* ipv4,
	uint16_t port,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_socketaddr_from_ipv6(
	void* ipv6,
	uint16_t port,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_socketaddr_as_ipv4(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_socketaddr_as_ipv6(
	void* ptr,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_socketaddr_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_socketaddr_type(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_socketaddrv4(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_socketaddrv4_from_string(
	RustBuffer str,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_socketaddrv4_new(
	void* ipv4,
	uint16_t port,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_socketaddrv4_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_socketaddrv4_ip(
	void* ptr,
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_fn_method_socketaddrv4_port(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_socketaddrv4_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_socketaddrv6(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_socketaddrv6_from_string(
	RustBuffer str,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_socketaddrv6_new(
	void* ipv6,
	uint16_t port,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_socketaddrv6_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_method_socketaddrv6_ip(
	void* ptr,
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_fn_method_socketaddrv6_port(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_socketaddrv6_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_tag(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_tag_from_bytes(
	RustBuffer bytes,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_tag_from_string(
	RustBuffer s,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_tag_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_tag_to_bytes(
	void* ptr,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_tag_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_url(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_url_from_string(
	RustBuffer s,
	RustCallStatus* out_status
);

int8_t uniffi_iroh_fn_method_url_equal(
	void* ptr,
	void* other,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_method_url_to_string(
	void* ptr,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_free_wrapoption(
	void* ptr,
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_wrapoption_no_wrap(
	RustCallStatus* out_status
);

void* uniffi_iroh_fn_constructor_wrapoption_wrap(
	RustBuffer name,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_init_callback_addcallback(
	ForeignCallback callback_stub,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_init_callback_docexportfilecallback(
	ForeignCallback callback_stub,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_init_callback_docimportfilecallback(
	ForeignCallback callback_stub,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_init_callback_downloadcallback(
	ForeignCallback callback_stub,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_init_callback_subscribecallback(
	ForeignCallback callback_stub,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_func_key_to_path(
	RustBuffer key,
	RustBuffer prefix,
	RustBuffer root,
	RustCallStatus* out_status
);

RustBuffer uniffi_iroh_fn_func_path_to_key(
	RustBuffer path,
	RustBuffer prefix,
	RustBuffer root,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_func_set_log_level(
	RustBuffer level,
	RustCallStatus* out_status
);

void uniffi_iroh_fn_func_start_metrics_collection(
	RustCallStatus* out_status
);

RustBuffer ffi_iroh_rustbuffer_alloc(
	int32_t size,
	RustCallStatus* out_status
);

RustBuffer ffi_iroh_rustbuffer_from_bytes(
	ForeignBytes bytes,
	RustCallStatus* out_status
);

void ffi_iroh_rustbuffer_free(
	RustBuffer buf,
	RustCallStatus* out_status
);

RustBuffer ffi_iroh_rustbuffer_reserve(
	RustBuffer buf,
	int32_t additional,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_continuation_callback_set(
	RustFutureContinuation callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_u8(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_u8(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_u8(
	void* handle,
	RustCallStatus* out_status
);

uint8_t ffi_iroh_rust_future_complete_u8(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_i8(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_i8(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_i8(
	void* handle,
	RustCallStatus* out_status
);

int8_t ffi_iroh_rust_future_complete_i8(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_u16(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_u16(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_u16(
	void* handle,
	RustCallStatus* out_status
);

uint16_t ffi_iroh_rust_future_complete_u16(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_i16(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_i16(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_i16(
	void* handle,
	RustCallStatus* out_status
);

int16_t ffi_iroh_rust_future_complete_i16(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_u32(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_u32(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_u32(
	void* handle,
	RustCallStatus* out_status
);

uint32_t ffi_iroh_rust_future_complete_u32(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_i32(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_i32(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_i32(
	void* handle,
	RustCallStatus* out_status
);

int32_t ffi_iroh_rust_future_complete_i32(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_u64(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_u64(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_u64(
	void* handle,
	RustCallStatus* out_status
);

uint64_t ffi_iroh_rust_future_complete_u64(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_i64(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_i64(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_i64(
	void* handle,
	RustCallStatus* out_status
);

int64_t ffi_iroh_rust_future_complete_i64(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_f32(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_f32(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_f32(
	void* handle,
	RustCallStatus* out_status
);

float ffi_iroh_rust_future_complete_f32(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_f64(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_f64(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_f64(
	void* handle,
	RustCallStatus* out_status
);

double ffi_iroh_rust_future_complete_f64(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_pointer(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_pointer(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_pointer(
	void* handle,
	RustCallStatus* out_status
);

void* ffi_iroh_rust_future_complete_pointer(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_rust_buffer(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_rust_buffer(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_rust_buffer(
	void* handle,
	RustCallStatus* out_status
);

RustBuffer ffi_iroh_rust_future_complete_rust_buffer(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_poll_void(
	void* handle,
	void* uniffi_callback,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_cancel_void(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_free_void(
	void* handle,
	RustCallStatus* out_status
);

void ffi_iroh_rust_future_complete_void(
	void* handle,
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_func_key_to_path(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_func_path_to_key(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_func_set_log_level(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_func_start_metrics_collection(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_addprogress_as_abort(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_addprogress_as_all_done(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_addprogress_as_done(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_addprogress_as_found(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_addprogress_as_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_addprogress_type(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_authorid_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_authorid_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_connectiontype_as_direct(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_connectiontype_as_mixed(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_connectiontype_as_relay(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_connectiontype_type(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_directaddrinfo_addr(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_directaddrinfo_last_control(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_directaddrinfo_last_payload(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_directaddrinfo_latency(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_close(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_del(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_export_file(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_get_download_policy(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_get_exact(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_get_many(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_get_one(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_id(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_import_file(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_leave(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_set_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_set_download_policy(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_set_hash(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_share(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_start_sync(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_status(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_doc_subscribe(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docexportprogress_as_abort(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docexportprogress_as_found(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docexportprogress_as_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docexportprogress_type(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docimportprogress_as_abort(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docimportprogress_as_all_done(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docimportprogress_as_found(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docimportprogress_as_ingest_done(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docimportprogress_as_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docimportprogress_type(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docticket_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docticket_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_as_abort(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_as_done(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_as_export(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_as_export_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_as_found(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_as_found_hash_seq(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_as_network_done(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_as_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadprogress_type(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_entry_author(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_entry_content_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_entry_content_hash(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_entry_content_len(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_entry_key(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_entry_namespace(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_filterkind_matches(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_hash_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_hash_to_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_hash_to_hex(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_hash_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_ipv4addr_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_ipv4addr_octets(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_ipv4addr_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_ipv6addr_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_ipv6addr_segments(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_ipv6addr_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_author_create(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_author_list(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_add_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_add_from_path(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_delete_blob(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_download(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_list(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_list_collections(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_list_incomplete(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_read_to_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_size(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_blobs_write_to_path(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_connection_info(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_connections(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_doc_create(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_doc_drop(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_doc_join(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_doc_list(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_doc_open(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_node_id(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_stats(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_status(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_tags_delete(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_irohnode_tags_list(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_liveevent_as_content_ready(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_liveevent_as_insert_local(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_liveevent_as_insert_remote(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_liveevent_as_neighbor_down(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_liveevent_as_neighbor_up(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_liveevent_as_sync_finished(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_liveevent_type(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_namespaceid_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_namespaceid_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_nodeaddr_derp_url(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_nodeaddr_direct_addresses(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_nodeaddr_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_nodestatusresponse_listen_addrs(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_nodestatusresponse_node_addr(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_nodestatusresponse_version(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_publickey_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_publickey_fmt_short(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_publickey_to_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_publickey_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_query_limit(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_query_offset(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_rangespec_is_all(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_rangespec_is_empty(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddr_as_ipv4(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddr_as_ipv6(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddr_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddr_type(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddrv4_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddrv4_ip(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddrv4_port(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddrv4_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddrv6_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddrv6_ip(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddrv6_port(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_socketaddrv6_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_tag_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_tag_to_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_tag_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_url_equal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_url_to_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_authorid_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_blobdownloadrequest_new(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_docticket_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_downloadlocation_external(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_downloadlocation_internal(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_downloadpolicy_everything(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_downloadpolicy_everything_except(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_downloadpolicy_nothing(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_downloadpolicy_nothing_except(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_filterkind_exact(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_filterkind_prefix(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_hash_from_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_hash_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_hash_new(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_ipv4addr_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_ipv4addr_new(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_ipv6addr_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_ipv6addr_new(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_irohnode_new(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_namespaceid_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_nodeaddr_new(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_publickey_from_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_publickey_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_query_all(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_query_author(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_query_author_key_exact(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_query_author_key_prefix(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_query_key_exact(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_query_key_prefix(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_query_single_latest_per_key(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_settagoption_auto(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_settagoption_named(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_socketaddr_from_ipv4(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_socketaddr_from_ipv6(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_socketaddrv4_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_socketaddrv4_new(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_socketaddrv6_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_socketaddrv6_new(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_tag_from_bytes(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_tag_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_url_from_string(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_wrapoption_no_wrap(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_constructor_wrapoption_wrap(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_addcallback_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docexportfilecallback_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_docimportfilecallback_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_downloadcallback_progress(
	RustCallStatus* out_status
);

uint16_t uniffi_iroh_checksum_method_subscribecallback_event(
	RustCallStatus* out_status
);

uint32_t ffi_iroh_uniffi_contract_version(
	RustCallStatus* out_status
);


int32_t iroh_cgo_AddCallback(uint64_t, int32_t, uint8_t *, int32_t, RustBuffer *);
int32_t iroh_cgo_DocExportFileCallback(uint64_t, int32_t, uint8_t *, int32_t, RustBuffer *);
int32_t iroh_cgo_DocImportFileCallback(uint64_t, int32_t, uint8_t *, int32_t, RustBuffer *);
int32_t iroh_cgo_DownloadCallback(uint64_t, int32_t, uint8_t *, int32_t, RustBuffer *);
int32_t iroh_cgo_SubscribeCallback(uint64_t, int32_t, uint8_t *, int32_t, RustBuffer *);

